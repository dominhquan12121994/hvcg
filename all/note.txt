--------------------
LESSON 2
- normal class for div, add class for defines new property
- reset css
- all way make script on the last of body tag
- event onclick of button
- javascript use method document.getElementById('id') to select a html element
<script>
    document.getElementById("demo").innerHTML = "hello world";
</script>
- the above code writes "hello world" into element with id = "demo"
----------------------
LESSON 3
- inline css, internal css, external css
- attribute target: open a new tab
- _parent: mo tab trong the cha cua pop up
- _self: mo tab ngay trong trang
- lam tat ca bai tap trong file pdf
- test link bang an danh voi 
- css>html attribute
- inline > internal > external: muc do uu tien trong css
- th in dam, can giua dung cho tr dau tien trong table
- colspan: merge cac o trong bang table
- bai 8, 9, 10git 
- don vi trong html luon la pixel va ko dung px
- icon: font-awesome
- link font aewsome:
<link href="//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.no-icons.min.css" rel="stylesheet">
<link href="//netdna.bootstrapcdn.com/font-awesome/3.2.1/css/font-awesome.css" rel="stylesheet">
- ctrl + shift + arrow
- q to exit git log
- dung padding cho the cha
- xu huong dung overflow: auto???
- luon nho box-sizing: border-box;
- set css ban dau cho file html
:root {
    font-size: 62.5%;
}
body {
    margin: 0px;
}

* {
    box-sizing: border-box;
}
- tai sao khi viet @media screen and (max-width: 600px) {} thi luon bi responsive luc 750px
- quy tac chia cot trong responsive
1. dien thoai: 1 cot
2. tablet: 2 cot
3. laptop, pc: 3 cot
- nguyen tac responsive: gom cot chia tu trai qua phai
- rem: relative of root element: vi vay luon dung rem va set root 62.5%, khi do 10px = 1rem, n rem = n*10 px;
- set rem trong root pseudo class :root {}, day la uu tien cao nhat trong file html
- pseudo class gom :hover, :active, :visited,...
- pseudo element gom :first-child, :before, :after,...
- css specificity: thu tu uu tien trong css: co nghia la thuoc tinh css nao se duoc ap dung: inline; id; class, attribute, pseudo-class; element, pseudo-element
    inline: style="color:red;"  \\\ 1000 points
    id: #id {color:black;}      \\\ 100 points
    class: .class {color:white;} \\\ 10 points
    attribute: [id=something] ---- div[id=div1] \\\ 10 points
    pseudo-class: :hover, :active \\\ 10 points
    element: h1, p, h2             \\\ 1 points
    pseudo-element: :before, :after   \\\ 1 points
    *, body, inherit:                   \\\ 0 points
- neu bang diem uu tien thuoc tinh moi nhat (code sau cung)
- div#a > div[id=a] : equal 101 points
- bang diem internal > external
- background-image: 1, 2, 3: 1 de 2 de 3
- background-position: a, b, c: a ap dung cho 1, b ap dung cho 2, c ap dung cho 3
- background-repeat: no-repeat, repeat;
- background shorthand: background: 1 a repeat, 2 b no-repeat;
- animation use @keyframes abc {
    from {

    }
    to {
        
    }
}
- z-index phai di cung position absolute
- khi lam responsive nho dua margin, padding ve 0px
- can rat luu y cac thuoc tinh cua display: inline, inline-block, block, flex
- uu tien su dung flex cho the cha de de chia div
- khi lam layout nho set % cho tat ca cac div to co trong html
- vi du: co cac div: navigation, background, guide section, value section:
    tat ca cac div tren thong nhat tu ban dau la width 90%, margin 0 auto;
    anh lui 2% -> tat ca cac noi dung phai de padding 2%
    khi thong nhat duoc cac con so nay, cac thanh phan trong html se thang nhau
    tu do tao ra giao dien responsive dung chuan
    tat ca cac thanh phan quy ve %, tru phan navigation nav-item
    muon de xuong kich thuoc nho hon, cach tot nhat la giam kich thuoc chu, phan tu?
    chi set margin va padding cho left va right, phan top and bottom 
- cac ten thuong dung
    header-block header-logo header-logo__item
    nav-block nav-bav nav__item
    banner-block banner-content -> banner__title banner__description
    main-block main-content main__title main__description -> main-img -> main-img__item -> tokyo,paris, ...
    footer-block -> footer-contact footer-contact__address footer-contact__tel
- vi du dat ten cac class trong as3
    nav-block 
        nav-menu 
            nav-menu__item
    banner-block 
        banner-content 
            banner-content__title 
            banner-content__description
    main-block 
        main-content
            main-content__title
            main-content__description
        main-img
            main-img-item
                main-img-item__mexico
                main-img-item__newyork
            main-img-item
                main-img-item__tokyo
                main-img-item__paris
            main-img-item
                main-img-item__invite
    value-block
        value-content
            value-travel
                value-travel__title
                value-travel__description
                value-travel__url
            value-host
                value-host__title  
                value-host__description  
                value-host__url
            value-trust
                value-trust__title
                value-trust__description
                value-trust__url  
- khi co class cho tat cac cac khoi cung nhu element, se de dang set css sau nay
- day la dieu BEM dang lam tot vi no set class cho tat ca cac block, element trong html
- giu alt + click con mat cua logo de vao che do trong suot
- save for web
- f12 de tro lai file ban dau sau khi cat duoc anh
- vao chu t de xem duoc font chu, kich thuoc chu
- nho tiet kiem div
- duong dan den file trong css khong can "", chi can ../
- quy trinh: tao khoi -> chinh cac element -> padding, margin
- ctrl + parth de check anh
- voi nhung class da dung roi va trung nhau luon dung #id de tranh anh huong de cac element da set tu truoc
- cac moc phan giai de lan responsive: small 480px; medium 768px; large 992px; extra large 1200px
- se phai lam cac media query:
@media screen and (max-width: 1200px) {} 
@media screen and (max-width: 992px) {} 
@media screen and (max-width: 768px) {} 
@media screen and (max-width: 480px) {} 

- JAVASCRIPT
- indexOf dung trong tim kiem
- jQuery la cach viet gon hon rat nhieu so voi js standard (js thuan) vi vay phai import cdn (content delivery net: mang phan phoi noi dung) hoac cai dat jQuery vao resource
- hoisting khong ap dung cho arrow function
- json la mot dinh dang du lieu, luu duoi dang file .json, hay dung de dinh dang du lieu object, object in array, nest object: luu tru duoi dang {"key" : "value"}
- co the dung cac ham nhu Parse, Stringify de chuyen qua lai giua dinh dang json va mot kieu du lieu trong javascript nhu object, object in array, nest object
- muc dich cua json la luu tru du lieu, den khi can dung thi chuyen thanh mot kieu du lieu trong js de su dung
- ajax stands for asynchronus javascript and xml: xu ly bat dong bo giua js va xhtml
- dom: document object model: quan ly cac thanh phan cua html, phuc vu cho viec tro dung doi tuong de xu ly: doi tuong co the la element, alert, prompt
- quy uoc dat ten:
    - class + id html: BEM, ten id == class
    - function, variable: camelCase
    - class js: PascalCase
    vi du
    - class + id: main__button
    - function: sendData, makeBigger
    - class js: new FrontendDev{}
- luon khai bao arrow truoc khi dung vi arrow khong co hoisting
- fontawesome cdn
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.13.1/css/all.css" integrity="sha384-xxzQGERXS00kBmZW/6qxqJPyxW3UR0BPsL4c8ILaIWXva5kFi7TxkIIaMiKtqV1Q" crossorigin="anonymous">
- ajax popper cdn
    https://unpkg.com/@popperjs/core@2.4.2/dist/umd/popper.min.js
- alt + z: hien full noi dung trong vs code
- tab nhay nhanh den thuoc tinh trong dong code
- float-right phai de trong container hoac container-fluid, khong de trong row, dung margin-left right
- dropdown menu required poper ajax
- each dropdown-menu requied a div btn-group
- khi viet dropdown chu y day du ca class va js: dropdown-toggle va data-toggle: dropdown
- justify content center on .row
- do while chac chan se vao dung ham mot lan, while co the khong duoc lan nao
- hinh nen mo co the lam background-image: lineear-gradient(black, black), url(img);
- col-?: 0-575px
- col-sm-?: 576-767px
- col-md-?: 768-991px
- col-lg-?: 992-1199px
- col-xl-?: 1200-1920px
example: col-12 col-sm-12 col-md-6 col-lg-4 col-xl-3
above mean: 
    0-575px: wrap 12/12 column; ( max 1 devide )
    576-767px: wrap 12/12 column; ( max 1 devide )
    768-991px: wrap 6/12 column; ( max 2 devide )
    992-1199px: wrap 4/12 column; ( max 3 devide )
    1200-1920px: wrap 3/12 column; ( max 4 devide )
if write only col-6: it mean 0-1920px: wrap 6/12 column; ( max 2 devide )
    col-6 col-lg-4: it mean 0-991px: wrap 6/12 column ( max 2 devide )
                            992-1920px: wrap 4/12 column ( max 3 devide )
- bootstrap use mobile first, designer desktop first so merge it when code responsive (byside i will desktop first)
    @media screen and ( min-width: 992px ) {
        // code with 992-1920px, so need more code with 0-992px
        h1 {
            font-size: 3rem;
        }
    }
it mean: 992-1920px: font-size will be 3rem
so if use max-width, use ( max-width: 575px ) ( max-width: 767px ) ( max-width: 991px ) ( max-width: 1199px )
- write bigger to smaller
@media screen and ( max-width: 1199px ) {
    // code here 0-1199px
}
@media screen and ( max-width: 991px ) {
    // code here 0-991px, write replace above
}
@media screen and ( max-width: 767px ) {
    // code here 0-767px, write replace above
}
@media screen and ( max-width: 575px ) {
    // code here 0-575px, write replace above
}